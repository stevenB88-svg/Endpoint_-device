name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ejecutar el flujo de trabajo en cada push a la rama main

jobs:
  build-and-run:
    runs-on: ubuntu-latest  # Usar el último runner de Ubuntu

    steps:
      - name: Check out code
        uses: actions/checkout@v2  # Clona el repositorio en el runner

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Configura Docker Buildx para construir imágenes

      - name: Build Docker Image
        run: |
          docker build -t my_api .  # Construye la imagen Docker con la etiqueta my_api

      - name: Run Docker Container
        run: |
          docker run -d -p 5001:5000 my_api  # Ejecuta el contenedor en segundo plano y mapea los puertos
          
      - name: Check if application is running
        run: |
          sleep 10  # Espera un poco para que el contenedor inicie completamente
          TOKEN=$(curl -X POST http://localhost:5001/login -H "Content-Type: application/json" -d '{"username": "admin", "password": "password"}' | jq -r '.access_token')
          curl -X GET http://localhost:5001/device-usage -H "Authorization: Bearer $TOKEN"
          sleep 11 # Ejecutando cierto script interno
          curl -X POST http://localhost:5001/run-script -H "Authorization: Bearer $TOKEN"


